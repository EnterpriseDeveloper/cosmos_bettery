syntax = "proto3";
package VoroshilovMax.bettery.publicevents;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "publicevents/refund_pub_events.proto";
import "publicevents/ref_pub_events.proto";
import "publicevents/fihish_pub_event.proto";
import "publicevents/valid_pub_events.proto";
import "publicevents/part_pub_events.proto";
import "publicevents/create_pub_events.proto";

option go_package = "github.com/VoroshilovMax/bettery/x/publicevents/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a refundPubEvents by id.
	rpc RefundPubEvents(QueryGetRefundPubEventsRequest) returns (QueryGetRefundPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/refundPubEvents/{id}";
	}

	// Queries a list of refundPubEvents items.
	rpc RefundPubEventsAll(QueryAllRefundPubEventsRequest) returns (QueryAllRefundPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/refundPubEvents";
	}


	// Queries a refPubEvents by id.
	rpc RefPubEvents(QueryGetRefPubEventsRequest) returns (QueryGetRefPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/refPubEvents/{id}";
	}

	// Queries a list of refPubEvents items.
	rpc RefPubEventsAll(QueryAllRefPubEventsRequest) returns (QueryAllRefPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/refPubEvents";
	}


	// Queries a fihishPubEvent by id.
	rpc FihishPubEvent(QueryGetFihishPubEventRequest) returns (QueryGetFihishPubEventResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/fihishPubEvent/{id}";
	}

	// Queries a list of fihishPubEvent items.
	rpc FihishPubEventAll(QueryAllFihishPubEventRequest) returns (QueryAllFihishPubEventResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/fihishPubEvent";
	}


	// Queries a validPubEvents by id.
	rpc ValidPubEvents(QueryGetValidPubEventsRequest) returns (QueryGetValidPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/validPubEvents/{id}";
	}

	// Queries a list of validPubEvents items.
	rpc ValidPubEventsAll(QueryAllValidPubEventsRequest) returns (QueryAllValidPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/validPubEvents";
	}


	// Queries a partPubEvents by id.
	rpc PartPubEvents(QueryGetPartPubEventsRequest) returns (QueryGetPartPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/partPubEvents/{id}";
	}

	// Queries a list of partPubEvents items.
	rpc PartPubEventsAll(QueryAllPartPubEventsRequest) returns (QueryAllPartPubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/partPubEvents";
	}


	// Queries a createPubEvents by id.
	rpc CreatePubEvents(QueryGetCreatePubEventsRequest) returns (QueryGetCreatePubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/createPubEvents/{id}";
	}

	// Queries a list of createPubEvents items.
	rpc CreatePubEventsAll(QueryAllCreatePubEventsRequest) returns (QueryAllCreatePubEventsResponse) {
		option (google.api.http).get = "/VoroshilovMax/bettery/publicevents/createPubEvents";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetRefundPubEventsRequest {
	uint64 id = 1;
}

message QueryGetRefundPubEventsResponse {
	RefundPubEvents RefundPubEvents = 1;
}

message QueryAllRefundPubEventsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRefundPubEventsResponse {
	repeated RefundPubEvents RefundPubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetRefPubEventsRequest {
	uint64 id = 1;
}

message QueryGetRefPubEventsResponse {
	RefPubEvents RefPubEvents = 1;
}

message QueryAllRefPubEventsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRefPubEventsResponse {
	repeated RefPubEvents RefPubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetFihishPubEventRequest {
	uint64 id = 1;
}

message QueryGetFihishPubEventResponse {
	FihishPubEvent FihishPubEvent = 1;
}

message QueryAllFihishPubEventRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFihishPubEventResponse {
	repeated FihishPubEvent FihishPubEvent = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetValidPubEventsRequest {
	uint64 id = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetValidPubEventsResponse {
	repeated ValidPubEvents ValidPubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllValidPubEventsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllValidPubEventsResponse {
	repeated ValidPubEvents ValidPubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetPartPubEventsRequest {
	uint64 id = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetPartPubEventsResponse {
	repeated PartPubEvents PartPubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllPartPubEventsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPartPubEventsResponse {
	repeated PartPubEvents PartPubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCreatePubEventsRequest {
	uint64 id = 1;
}

message QueryGetCreatePubEventsResponse {
	CreatePubEvents CreatePubEvents = 1;
}

message QueryAllCreatePubEventsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCreatePubEventsResponse {
	repeated CreatePubEvents CreatePubEvents = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
