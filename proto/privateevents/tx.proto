syntax = "proto3";
package VoroshilovMax.bettery.privateevents;

// this line is used by starport scaffolding # proto/tx/import
import "privateevents/valid_priv_events.proto";
import "privateevents/part_priv_events.proto";
import "privateevents/create_priv_events.proto";

option go_package = "github.com/VoroshilovMax/bettery/x/privateevents/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateValidPrivEvents(MsgCreateValidPrivEvents) returns (MsgCreateValidPrivEventsResponse);
  rpc CreatePartPrivEvents(MsgCreatePartPrivEvents) returns (MsgCreatePartPrivEventsResponse);
  rpc CreateCreatePrivEvents(MsgCreateCreatePrivEvents) returns (MsgCreateCreatePrivEventsResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateValidPrivEvents {
  string creator = 1;
  uint64 privId = 2;
  string answer = 3;
}

message MsgCreateValidPrivEventsResponse {
  uint64 id = 1;
}

message MsgCreatePartPrivEvents {
  string creator = 1;
  uint64 privId = 2;
  string answer = 3;
}

message MsgCreatePartPrivEventsResponse {
  uint64 id = 1;
}

message MsgCreateCreatePrivEvents {
  string creator = 1;
  uint64 privId = 2;
  string question = 3;
  repeated string answers = 4;
  string winner = 5;
  string loser = 6;
  uint64 startTime = 7;
  uint64 endTime = 8;
  bool finished = 9;
}

message MsgCreateCreatePrivEventsResponse {
  uint64 id = 1;
}
